[1/9] Performing build step for 'bootloader'
[1/1] cd /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/bootloader/esp-idf/esptool_py && /home/bragi/.espressif/python_env/idf5.3_py3.11_env/bin/python /home/bragi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/commands.c.obj
/home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/main/commands.c: In function 'parse_input':
/home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/main/commands.c:114:36: warning: this statement may fall through [-Wimplicit-fallthrough=]
  114 |                                 if (!has_split) {
      |                                    ^
/home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/main/commands.c:124:25: note: here
  124 |                         default:
      |                         ^~~~~~~
[4/9] Completed 'bootloader'
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable serial.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/serial.bin
[9/9] cd /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/esp-idf/esptool_py && /home/bragi/.espressif/python_env/idf5.3_py3.11_env/bin/python /home/bragi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/partition_table/partition-table.bin /home/bragi/Documents/Skolaverkefni/IOT/assignment_01/skeleton_serial/build/serial.bin
serial.bin binary size 0x2cb30 bytes. Smallest app partition is 0x100000 bytes. 0xd34d0 bytes (83%) free.
